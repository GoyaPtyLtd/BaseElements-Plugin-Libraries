=======================================================================
iOS
=======================================================================

On macOS the plugin is built using macOS 12.0.1 and Xcode 13.1.

Download the FileMaker External Plug-In API from

	http://www.filemaker.com/support/technologies/

and place the FMWrapper.framework in the Libraries directory.

The scripts referred to shoud be in the

	BUILDING/Scripts
	
directory. Most of the script require paths to vbe set, notably for SRCROOT and the directory containing the source for the library.

Notes on the build scripts:
- check the scripts for any paths that need to set for your environment
- built libraries should be copied into place automatically


=======================================================================
Boost - 1.75_0
=======================================================================

Boost is available from

	http://www.boost.org/

Get a build script from

	https://raw.githubusercontent.com/faithfracture/Apple-Boost-BuildScript/master/boost.sh
	
and place it in the same directory as the boost archive download.

Edit the line

	EXTRA_ARM_FLAGS="-DBOOST_AC_USE_PTHREADS -DBOOST_SP_USE_PTHREADS -g -DNDEBUG"

to read

	EXTRA_ARM_FLAGS="-g -DNDEBUG"


Build the library using

	./boost.sh -ios --boost-version 1.75.0 --boost-libs "program_options regex date_time filesystem thread"

and copy the xcframework to the project directory

	cp -R dist/boost.xcframework "${SRCROOT}/Libraries/iOS"


=======================================================================
Jansson - 2.5
=======================================================================

Download the source from

	https://github.com/GoyaPtyLtd/jansson

Then copy the compile_for_ios.sh script to the distribution directory

	sh ./build_jansson.sh

Copy jansson.h and jansson_config.h from output/<platform>/include to the Headers directory and  output/libjansson.a to Libraries/iOS.


=======================================================================
OpenSSL - 1.1.1j
=======================================================================

Download the latest openssl source from

	http://www.openssl.org/source/

and extract the archive. Then

	sh ./build_openssl.sh

Copy the header and library files.

	cp -R openssl-OpenSSL_1_1_1-stable/include/openssl "${SRCROOT}/Headers/"
	cp openssl_iOS_Release/libcrypto.a openssl_iOS_Release/libssl.a "${SRCROOT}/Libraries/iOS"


=======================================================================
libssh2 - 1.9.0
=======================================================================

Note: OpenSSL & zlib must be built first.

Download the source from

	http://www.libssh2.org/

Download the latest openssl source from

	http://www.openssl.org/source/

and extract the archive. Then

	sh ./build_openssh2.sh

Copy the header and library files.

	cp -R libssh2-1.9.0/include/openssl "${SRCROOT}/Headers/"
	cp libssh2_iOS_Release/libssh2.a "${SRCROOT}/Libraries/iOS"


=======================================================================
libcurl - 7.76.1
=======================================================================

Note: OpenSSL & libssh2 must be built before building libcurl.

Download the source from

	http://curl.haxx.se/download.html

Copy build_libcurl.sh to the same directory as the expanded source and

	sh ./build_libcurl.sh

Copy the header and library files.

	cp -R curl-7.76.1/include/curl "${SRCROOT}/Headers/"
	cp libcurl_iOS_Release/libcurl.a "${SRCROOT}/Libraries/iOS"


=======================================================================
duktape - 2.6.0
=======================================================================

Download the source from

	http://duktape.org/

and extract the archive to the desktop and copy the src directory to the Source directory and rename it to duktape.


=======================================================================
libjpeg-turbo - 2.0.6
=======================================================================

Download a build script from

	https://github.com/jeremyfa/libturbojpeg-ios/blob/master/libturbojpeg-ios.sh

From the command line run

	sh ./build_libturbojpeg.sh
	
to download and build the library and then copy the library to the project directory

	cp libjpeg-turbo/libs/ios/universal/libturbojpeg.a  ${SRCROOT}/BaseElements/Libraries/iOS/libturbojpeg.a
	

=======================================================================
Poco 1.10.1
=======================================================================

Download the source from

	http://pocoproject.org/download/index.html

Then

	cd poco-poco-1.10.1-all
	./configure --config=iPhone-clang-libc++ --cflags="-miphoneos-version-min=13.2" --prefix="${$(pwd)}/_build_iphone" --no-sharedlibs --static --poquito --omit=CppParser,Crypto,Data,Encodings,MongoDB,PDF,PageCompiler,Redis,Util --no-tests --no-samples
	make -s -j install
	make distclean
	./configure --config=iPhoneSimulator-clang-libc++ --prefix="${$(pwd)}/_build_iphone_simulator" --no-sharedlibs --static --poquito --omit=CppParser,Crypto,Data,Encodings,MongoDB,PDF,PageCompiler,Redis --no-tests --no-samples
	make -s -j install

Copy the libraries (and, if necessary, the headers) to the project directory

	cp -R ./_build_iphone/include/Poco "${SRCROOT}/Headers"
	cp ./_build_iphone/lib/libPocoFoundation.a ./_build_iphone/lib/libPocoNet.a ./_build_iphone/lib/libPocoXML.a ./_build_iphone/lib/libPocoZip.a ./_build_iphone/lib/libPocoJSON.a "${SRCROOT}/Libraries/iOS/iPhoneOS"
	cp ./_build_iphone_simulator/lib/libPocoFoundation.a ./_build_iphone_simulator/lib/libPocoNet.a ./_build_iphone_simulator/lib/libPocoXML.a ./_build_iphone_simulator/lib/libPocoZip.a ./_build_iphone_simulator/lib/libPocoJSON.a "${SRCROOT}/Libraries/iOS/iPhoneOSSimulator"


=======================================================================
libiconv - 1.16
=======================================================================

Download the source for libiconv from

	https://www.gnu.org/software/libiconv/#downloading

and extract the archive. Then

	sh ./build_libiconv.sh

Copy the Headers and libraries to the project directory

	cp -R _build_ios/include/*.h "${SRCROOT}/Headers/iconv"
	cp libiconv_iOS_Release/libiconv.a  libiconv_iOS_Release/libcharset.a "${SRCROOT}/Libraries/iOS"


=======================================================================
libxml2 - 2.9.10
=======================================================================

Download the source for libxml2 from

	http://xmlsoft.org/downloads.html

and extract the archive. Then

	sh ./build_libxml2.sh
		
Copy the Headers and libraries to the project directory

	cp -R ./_build/include/libxml2 "${SRCROOT}/Headers"
	cp libxml2_iOS_Release/libxml2.a "${SRCROOT}/Libraries/iOS"


=======================================================================
libxslt - 1.1.34
=======================================================================

Download the source from

	http://xmlsoft.org/downloads.html

and extract the archive. Then

	sh ./build_libxml2.sh
	
Copy the Headers and libraries to the project directory

	cp -R ./_build/include/libxslt "${SRCROOT}/Headers"
	cp libxslt_iOS_Release/libxslt.a libxslt_iOS_Release/libexslt.a "${SRCROOT}/Libraries/iOS"


=======================================================================
freetype - 2.10.4
=======================================================================

Download freetype from

	https://www.freetype.org/download.html
	
and extract the archive. Then

	sh ./build_libfreetype.sh

If necessary, copy the output/<platform>/freetype2 directory to Headers.


=======================================================================
fontconfig - 2.13.1
=======================================================================

Download fontconfig from

	https://www.freedesktop.org/wiki/Software/fontconfig/
	
and extract the archive. Then

	sh ./build_libfontconfige.sh

If necessary, copy the output/<platform>/fontconfig directory to Headers.


=======================================================================
podofo - 0.9.7
=======================================================================

Download podofo from

	http://podofo.sourceforge.net/download.html
	
and expand it. In the same directory run the build script

	sh ./build_libpodofo.sh
	
Copy the header and library files.

	cd podofo-0.9.7
	cp -R _build_ios/include/podofo "${SRCROOT}/Headers"
	cp _build_ios/libpodofo.a "${SRCROOT}/Libraries/iOS"

=======================================================================
